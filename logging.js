// Generated by CoffeeScript 1.4.0
(function() {
  var addLogging, describeArgs, escodegen, esprima, estraverse, getAfterCode, getBeforeCode, parse, wrapFunctionBody, _;

  escodegen = require('escodegen');

  esprima = require('esprima');

  estraverse = require('estraverse');

  _ = require('underscore');

  parse = esprima.parse;

  addLogging = function(code) {
    var ast, prelude;
    ast = parse(code);
    estraverse.traverse(ast, {
      leave: function(node, parent) {
        if (node.type === 'FunctionDeclaration' || node.type === 'FunctionExpression') {
          return wrapFunctionBody(node, getBeforeCode(node, getAfterCode(node)));
        }
      }
    });
    prelude = "var _ = require('underscore'), describeArgs = " + (describeArgs.toString()) + ";";
    return prelude + escodegen.generate(ast);
  };

  getBeforeCode = function(node) {
    var describeArgs, name, paramNames, x;
    name = node.id != null ? node.id.name : '<anonymous function>';
    paramNames = ((function() {
      var _i, _len, _ref, _results;
      _ref = _.pluck(node.params, 'name');
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        x = _ref[_i];
        _results.push("'" + x + "'");
      }
      return _results;
    })()).join(', ');
    describeArgs = "describeArgs([" + paramNames + "], arguments)";
    return "console.log('Entering " + name + "(' + " + describeArgs + " + ')');";
  };

  getAfterCode = function(node) {
    return '';
  };

  wrapFunctionBody = function(node, beforeCode, afterCode) {
    var afterNodes, beforeNodes;
    beforeNodes = beforeCode != null ? parse(beforeCode).body : [];
    afterNodes = afterCode != null ? parse(afterCode).body : [];
    return node.body.body = beforeNodes.concat(node.body.body, afterNodes);
  };

  describeArgs = function(parameterNames, values) {
    var formatValue, name, names, val;
    names = (function() {
      var _i, _len, _results;
      _results = [];
      for (_i = 0, _len = parameterNames.length; _i < _len; _i++) {
        name = parameterNames[_i];
        _results.push("" + name + "=");
      }
      return _results;
    })();
    formatValue = function(v) {
      if (typeof v === 'string') {
        return "'" + v + "'";
      } else {
        return v;
      }
    };
    return ((function() {
      var _i, _len, _ref, _ref1, _results;
      _ref = _.zip(names, values);
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        _ref1 = _ref[_i], name = _ref1[0], val = _ref1[1];
        _results.push("" + (name != null ? name : '') + (formatValue(val)));
      }
      return _results;
    })()).join(', ');
  };

  console.log(addLogging("function foo(a, b) {\n    var x = 'blah';\n    var y = (function () {\n        return 3;\n    })();\n}\nfoo(1, 'wut', 3)"));

}).call(this);
